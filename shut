#! /bin/sh

prefix="test"
donotruntests=false
recursive=false
logdir=

handle_args() {
  while getopts "d:nr" "opt"; do
    case "$opt" in
      d) logdir="$OPTARG";;
      n) donotruntests=true;;
      r) recursive=true;;
      *) exit 1;;
    esac
  done
  shift $(($OPTIND - 1))
  if [ $# -ge 1 ]; then
    prefix="$@"
  fi
}

setup() {
  if [ -n "$logdir" ]; then
    if [ -e "$logdir" ]; then
      rm -rf "$logdir"
    fi
    mkdir -p "$logdir"
  fi
}

collecttestnames() {
  if $recursive; then
    maxdepth=""
  else
    maxdepth="-maxdepth 1"
  fi
  find -L . $maxdepth -type f -executable -name "$prefix*" | sort
}

runtesttoscreen() {
  testname=$1
  dirname=$(dirname "$testname")
  basename=$(basename "$testname")
  (cd "$dirname"; "./$basename" 2>&1)
  exitstatus=$?
  return $exitstatus
}

stdintoexitstatus() {
  read exitstatus
  return $exitstatus
}

runtesttofileandscreen() {
  testname=$1
  mkdir -p "$logdir/$testname"
  outputfile="$logdir/$testname/output"
  ((((runtesttoscreen "$testname"; echo $? >&3 ) |
        tee "$outputfile" >&4) 3>&1) | stdintoexitstatus) 4>&1
  exitstatus=$?
  exitstatusfile="$logdir/$testname/exitstatus"
  echo $exitstatus > "$exitstatusfile"
  return $exitstatus
}

runtesttosomething() {
  testname=$1
  if [ -n "$logdir" ]; then
    runtesttofileandscreen "$testname"
  else
    runtesttoscreen "$testname"
  fi
}

decoratehead() {
  testname=$1
  echo "================"
  echo "$testname"
  echo "----------------"
  echo "output:"
}

decoratebody() {
  sed 's/^/  /'
}

decoratetail() {
  testname=$1
  exitstatus=$2
  echo "----------------"
  echo "exitstatus: $exitstatus"
  echo "FAIL $testname"
  echo "----------------"
}

decorate() {
  testname=$1
  exitstatus=$2
  decoratehead "$testname"
  decoratebody
  decoratetail "$testname" "$exitstatus"
}

runtest() {
  testname=$1
  output="$(runtesttosomething "$testname" 2>&1)"
  exitstatus=$?
  if [ $exitstatus -ne 0 ]; then
    echo "$output" | decorate "$testname" "$exitstatus"
  fi
  return $exitstatus
}

runtests() {
  fail=0

  while read testname; do
    if $donotruntests; then
      echo "$testname"
    else
      runtest "$testname" || fail=1
    fi
  done

  return $fail
}

main() {
  handle_args "$@"
  setup
  collecttestnames | runtests
  success=$?
  return $success
}

main "$@"
